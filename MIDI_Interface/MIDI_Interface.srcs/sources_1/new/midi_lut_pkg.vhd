library IEEE;
  use IEEE.STD_LOGIC_1164.all;
  use IEEE.NUMERIC_STD.all;
  use IEEE.MATH_REAL.all;

package midi_lut_pkg is
  function real_to_slv(int_bits, frac_bits : natural; r : real) return std_logic_vector;
  type freq_lut_type is array (0 to 127) of std_logic_vector(31 downto 0);
  constant midi_freq_lut : freq_lut_type;
end package;

package body midi_lut_pkg is
  function real_to_slv(int_bits, frac_bits : natural; r : real) return std_logic_vector is
    variable int_part  : integer;
    variable frac_part : integer;
    variable result    : std_logic_vector(int_bits + frac_bits - 1 downto 0);
  begin
    int_part := integer(floor(r));
    frac_part := integer((r - real(int_part)) * real(2 ** frac_bits));
    result := std_logic_vector(to_unsigned(int_part, int_bits)) & std_logic_vector(to_unsigned(frac_part, frac_bits));
    return result;
  end function;
  constant midi_freq_lut : freq_lut_type := (
    real_to_slv(14, 18, 8.17580),
    real_to_slv(14, 18, 8.66196),
    real_to_slv(14, 18, 9.17702),
    real_to_slv(14, 18, 9.72272),
    real_to_slv(14, 18, 10.30086),
    real_to_slv(14, 18, 10.91338),
    real_to_slv(14, 18, 11.56233),
    real_to_slv(14, 18, 12.24986),
    real_to_slv(14, 18, 12.97827),
    real_to_slv(14, 18, 13.75000),
    real_to_slv(14, 18, 14.56762),
    real_to_slv(14, 18, 15.43385),
    real_to_slv(14, 18, 16.35160),
    real_to_slv(14, 18, 17.32391),
    real_to_slv(14, 18, 18.35405),
    real_to_slv(14, 18, 19.44544),
    real_to_slv(14, 18, 20.60172),
    real_to_slv(14, 18, 21.82676),
    real_to_slv(14, 18, 23.12465),
    real_to_slv(14, 18, 24.49971),
    real_to_slv(14, 18, 25.95654),
    real_to_slv(14, 18, 27.50000),
    real_to_slv(14, 18, 29.13524),
    real_to_slv(14, 18, 30.86771),
    real_to_slv(14, 18, 32.70320),
    real_to_slv(14, 18, 34.64783),
    real_to_slv(14, 18, 36.70810),
    real_to_slv(14, 18, 38.89087),
    real_to_slv(14, 18, 41.20344),
    real_to_slv(14, 18, 43.65353),
    real_to_slv(14, 18, 46.24930),
    real_to_slv(14, 18, 48.99943),
    real_to_slv(14, 18, 51.91309),
    real_to_slv(14, 18, 55.00000),
    real_to_slv(14, 18, 58.27047),
    real_to_slv(14, 18, 61.73541),
    real_to_slv(14, 18, 65.40639),
    real_to_slv(14, 18, 69.29566),
    real_to_slv(14, 18, 73.41619),
    real_to_slv(14, 18, 77.78175),
    real_to_slv(14, 18, 82.40689),
    real_to_slv(14, 18, 87.30706),
    real_to_slv(14, 18, 92.49861),
    real_to_slv(14, 18, 97.99886),
    real_to_slv(14, 18, 103.82617),
    real_to_slv(14, 18, 110.00000),
    real_to_slv(14, 18, 116.54094),
    real_to_slv(14, 18, 123.47083),
    real_to_slv(14, 18, 130.81278),
    real_to_slv(14, 18, 138.59132),
    real_to_slv(14, 18, 146.83238),
    real_to_slv(14, 18, 155.56349),
    real_to_slv(14, 18, 164.81378),
    real_to_slv(14, 18, 174.61412),
    real_to_slv(14, 18, 184.99721),
    real_to_slv(14, 18, 195.99772),
    real_to_slv(14, 18, 207.65235),
    real_to_slv(14, 18, 220.00000),
    real_to_slv(14, 18, 233.08188),
    real_to_slv(14, 18, 246.94165),
    real_to_slv(14, 18, 261.62557),
    real_to_slv(14, 18, 277.18263),
    real_to_slv(14, 18, 293.66477),
    real_to_slv(14, 18, 311.12698),
    real_to_slv(14, 18, 329.62756),
    real_to_slv(14, 18, 349.22823),
    real_to_slv(14, 18, 369.99442),
    real_to_slv(14, 18, 391.99544),
    real_to_slv(14, 18, 415.30470),
    real_to_slv(14, 18, 440.00000),
    real_to_slv(14, 18, 466.16376),
    real_to_slv(14, 18, 493.88330),
    real_to_slv(14, 18, 523.25113),
    real_to_slv(14, 18, 554.36526),
    real_to_slv(14, 18, 587.32954),
    real_to_slv(14, 18, 622.25397),
    real_to_slv(14, 18, 659.25511),
    real_to_slv(14, 18, 698.45646),
    real_to_slv(14, 18, 739.98885),
    real_to_slv(14, 18, 783.99087),
    real_to_slv(14, 18, 830.60940),
    real_to_slv(14, 18, 880.00000),
    real_to_slv(14, 18, 932.32752),
    real_to_slv(14, 18, 987.76660),
    real_to_slv(14, 18, 1046.50226),
    real_to_slv(14, 18, 1108.73052),
    real_to_slv(14, 18, 1174.65907),
    real_to_slv(14, 18, 1244.50793),
    real_to_slv(14, 18, 1318.51023),
    real_to_slv(14, 18, 1396.91293),
    real_to_slv(14, 18, 1479.97769),
    real_to_slv(14, 18, 1567.98174),
    real_to_slv(14, 18, 1661.21879),
    real_to_slv(14, 18, 1760.00000),
    real_to_slv(14, 18, 1864.65505),
    real_to_slv(14, 18, 1975.53321),
    real_to_slv(14, 18, 2093.00452),
    real_to_slv(14, 18, 2217.46105),
    real_to_slv(14, 18, 2349.31814),
    real_to_slv(14, 18, 2489.01587),
    real_to_slv(14, 18, 2637.02046),
    real_to_slv(14, 18, 2793.82585),
    real_to_slv(14, 18, 2959.95538),
    real_to_slv(14, 18, 3135.96349),
    real_to_slv(14, 18, 3322.43758),
    real_to_slv(14, 18, 3520.00000),
    real_to_slv(14, 18, 3729.31009),
    real_to_slv(14, 18, 3951.06641),
    real_to_slv(14, 18, 4186.00904),
    real_to_slv(14, 18, 4434.92210),
    real_to_slv(14, 18, 4698.63629),
    real_to_slv(14, 18, 4978.03174),
    real_to_slv(14, 18, 5274.04091),
    real_to_slv(14, 18, 5587.65170),
    real_to_slv(14, 18, 5919.91076),
    real_to_slv(14, 18, 6271.92698),
    real_to_slv(14, 18, 6644.87516),
    real_to_slv(14, 18, 7040.00000),
    real_to_slv(14, 18, 7458.62018),
    real_to_slv(14, 18, 7902.13282),
    real_to_slv(14, 18, 8372.01809),
    real_to_slv(14, 18, 8869.84419),
    real_to_slv(14, 18, 9397.27257),
    real_to_slv(14, 18, 9956.06348),
    real_to_slv(14, 18, 10548.08182),
    real_to_slv(14, 18, 11175.30341),
    real_to_slv(14, 18, 11839.82153),
    real_to_slv(14, 18, 12543.85395)
  );
end package body;
